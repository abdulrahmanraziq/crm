{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91984\\\\Documents\\\\CRM\\\\client\\\\src\\\\components\\\\Communications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Communication.css';\nimport { Sidebar } from './Sidebar'; // Import Sidebar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Communication = () => {\n  _s();\n  const [customers, setCustomers] = useState([]); // Store all customers\n  const [selectedCustomerId, setSelectedCustomerId] = useState(null); // Store selected customer's ID\n  const [communications, setCommunications] = useState([]);\n  const [newComm, setNewComm] = useState(''); // Hold new communication entry\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch customers on component mount\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        const response = await axios.get('https://crm-mern-back-end.onrender.com/api/customers');\n        setCustomers(response.data);\n      } catch (error) {\n        console.error('Failed to load customers', error);\n      }\n    };\n    fetchCustomers();\n  }, []);\n\n  // Fetch communications for a specific customer when customerId changes\n  useEffect(() => {\n    if (!selectedCustomerId) return;\n    const fetchCommunications = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`https://crm-mern-back-end.onrender.com/api/customers/${selectedCustomerId}/communications`);\n        setCommunications(response.data);\n      } catch (error) {\n        setError('Failed to load communications');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCommunications();\n  }, [selectedCustomerId]);\n\n  // Handle adding a new communication entry\n  const handleAddCommunication = async () => {\n    try {\n      const response = await axios.post(`https://crm-mern-back-end.onrender.com/api/customers/${selectedCustomerId}/communications`, {\n        content: newComm\n      });\n      setCommunications([...communications, response.data]); // Append new communication to the list\n      setNewComm(''); // Clear input field\n    } catch (error) {\n      console.error('Error adding communication:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"communication-section\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-5\",\n      children: \"Select Customer and View Communications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCustomerId || '',\n      onChange: e => setSelectedCustomerId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a customer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: customer._id,\n        children: [customer.name, \" \"]\n      }, customer._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !selectedCustomerId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a customer to view their communications.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 31\n    }, this), selectedCustomerId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Customer Communications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading communications...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: communications.map(comm => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comm.content\n        }, comm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComm,\n          onChange: e => setNewComm(e.target.value),\n          placeholder: \"Add new communication...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCommunication,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Communication, \"218USHNQEAGcs8NYdVRmiZM14kc=\");\n_c = Communication;\nexport default Communication;\nvar _c;\n$RefreshReg$(_c, \"Communication\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Communication","_s","customers","setCustomers","selectedCustomerId","setSelectedCustomerId","communications","setCommunications","newComm","setNewComm","loading","setLoading","error","setError","fetchCustomers","response","get","data","console","fetchCommunications","handleAddCommunication","post","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","customer","_id","name","comm","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91984/Documents/CRM/client/src/components/Communications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Communication.css'; \r\nimport { Sidebar } from './Sidebar'; // Import Sidebar\r\n\r\nconst Communication = () => {\r\n  const [customers, setCustomers] = useState([]); // Store all customers\r\n  const [selectedCustomerId, setSelectedCustomerId] = useState(null); // Store selected customer's ID\r\n  const [communications, setCommunications] = useState([]);\r\n  const [newComm, setNewComm] = useState(''); // Hold new communication entry\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch customers on component mount\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const response = await axios.get('https://crm-mern-back-end.onrender.com/api/customers');\r\n        setCustomers(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to load customers', error);\r\n      }\r\n    };\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  // Fetch communications for a specific customer when customerId changes\r\n  useEffect(() => {\r\n    if (!selectedCustomerId) return;\r\n\r\n    const fetchCommunications = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(`https://crm-mern-back-end.onrender.com/api/customers/${selectedCustomerId}/communications`);\r\n        setCommunications(response.data);\r\n      } catch (error) {\r\n        setError('Failed to load communications');\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCommunications();\r\n  }, [selectedCustomerId]);\r\n\r\n  // Handle adding a new communication entry\r\n  const handleAddCommunication = async () => {\r\n    try {\r\n      const response = await axios.post(`https://crm-mern-back-end.onrender.com/api/customers/${selectedCustomerId}/communications`, {\r\n        content: newComm,\r\n      });\r\n      setCommunications([...communications, response.data]); // Append new communication to the list\r\n      setNewComm(''); // Clear input field\r\n    } catch (error) {\r\n      console.error('Error adding communication:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"communication-section\">\r\n      {/* Add Sidebar here */}\r\n      <Sidebar />\r\n\r\n      <h3 className='mt-5'>Select Customer and View Communications</h3>\r\n\r\n      {/* Dropdown to select a customer */}\r\n      <select \r\n        value={selectedCustomerId || ''} \r\n        onChange={(e) => setSelectedCustomerId(e.target.value)}\r\n      >\r\n        <option value=\"\">Select a customer...</option>\r\n        {customers.map((customer) => (\r\n          <option key={customer._id} value={customer._id}>\r\n            {customer.name} {/* Assuming each customer has a name field */}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Show message if no customer is selected */}\r\n      {!selectedCustomerId && <p>Select a customer to view their communications.</p>}\r\n\r\n      {/* Show communications for selected customer */}\r\n      {selectedCustomerId && (\r\n        <>\r\n          <h3>Customer Communications</h3>\r\n          {loading && <p>Loading communications...</p>}\r\n          {error && <p>{error}</p>}\r\n\r\n          <ul>\r\n            {communications.map((comm) => (\r\n              <li key={comm._id}>{comm.content}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          {/* Form to add a new communication */}\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={newComm}\r\n              onChange={(e) => setNewComm(e.target.value)}\r\n              placeholder=\"Add new communication...\"\r\n            />\r\n            <button onClick={handleAddCommunication}>Add</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Communication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}