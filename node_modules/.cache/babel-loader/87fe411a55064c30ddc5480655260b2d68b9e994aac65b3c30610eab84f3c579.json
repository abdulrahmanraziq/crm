{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91984\\\\Documents\\\\CRM\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link, useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\nimport Dashboard from \"../components/Dashboard.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    loginUser\n  } = useContext(AuthContext); // Access the loginUser function\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    }),\n    onSubmit: async values => {\n      try {\n        setLoading(true);\n        await loginUser(values); // Call loginUser function from AuthContext\n        toast.success('Login successful!');\n\n        // Redirect to the dashboard after successful login\n        navigate(\"/dashboard\");\n      } catch (error) {\n        toast.error(error.message); // Show error message\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          className: `form-control ${formik.touched.email && formik.errors.email ? 'is-invalid' : ''}`,\n          ...formik.getFieldProps('email'),\n          placeholder: \"Enter email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          className: `form-control ${formik.touched.password && formik.errors.password ? 'is-invalid' : ''}`,\n          ...formik.getFieldProps('password'),\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-4\",\n        disabled: loading,\n        children: loading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Create One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"Glr5eNx24UmCmOgmMKxALfS1W80=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useFormik","Yup","AuthContext","ToastContainer","toast","Link","useNavigate","Dashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","loginUser","loading","setLoading","navigate","formik","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","success","error","message","children","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","type","id","name","className","touched","errors","getFieldProps","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/91984/Documents/CRM/client/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\r\nimport Dashboard from \"../components/Dashboard.js\";\r\n\r\nconst Login = () => {\r\n  const { loginUser } = useContext(AuthContext); // Access the loginUser function\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Email is required'),\r\n      password: Yup.string()\r\n        .min(6, 'Password must be at least 6 characters')\r\n        .required('Password is required'),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setLoading(true);\r\n        await loginUser(values); // Call loginUser function from AuthContext\r\n        toast.success('Login successful!');\r\n        \r\n        // Redirect to the dashboard after successful login\r\n        navigate(\"/dashboard\");\r\n\r\n      } catch (error) {\r\n        toast.error(error.message); // Show error message\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={2000} />\r\n      <h3>Login</h3>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {/* Email Field */}\r\n        <div>\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            className={`form-control ${formik.touched.email && formik.errors.email ? 'is-invalid' : ''}`}\r\n            {...formik.getFieldProps('email')}\r\n            placeholder=\"Enter email\"\r\n            required\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n\r\n        {/* Password Field */}\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            className={`form-control ${formik.touched.password && formik.errors.password ? 'is-invalid' : ''}`}\r\n            {...formik.getFieldProps('password')}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n          ) : null}\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button type=\"submit\" className=\"btn btn-primary mt-4\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n      \r\n      <p className=\"mt-3\">\r\n        Don't have an account? <Link to=\"/register\">Create One</Link>\r\n      </p>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}